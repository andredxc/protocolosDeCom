
  Esse trecho do myParser atualmente assume que todos os pacotes terão o cabeçalho intPai, o que pelo que entendi da especificação não é o caso pois não deveriam ser necessárias modificações no send.py. Como posso fazer essa verificação para criar o cabeçalho se ele não existir?

    state parse_ipv4 {
        packet.extract(hdr.ipv4);
        transition parse_intPai;
        // transition accept;
    }

    state parse_intPai {
        packet.extract(hdr.intPai);
        meta.parser_metadata.remaining = hdr.intPai.Quantidade_Filhos;
        transition select(hdr.intPai.Quantidade_Filhos) {
            0       : accept
            default : parse_intFilho;
        }
    }

    state parse_intFilho {
        packet.extract(hdr.intFilho.next);
        meta.parser_metadata.remaining = meta.parser_metadata.remaining  - 1;
        transition select(meta.parser_metadata.remaining) {
            0 : accept;
            default: parse_intFilho;
        }
    }

    Este outro trecho deve criar e preencher o novo cabeçalho int filho em cada switch, faz sentido? Mas mais specificamente estou em dúvida com relação ao Timestamp, que achei no link comentado, e ao ID do switch, que não encontrei.

    apply {
        if (hdr.intPai.isValid()) {
            hdr.intPai.Quantidade_Filhos = hdr.intPai.Quantidade_Filhos + 1;
            hdr.intFilho[hdr.intPai.Quantidade_Filhos].setValid();
            fill_intFilho();
            if (hdr.ipv4.isValid()) {
                ipv4_lpm.apply();
            }
        }
        else {
            drop();
        }
    }

    action fill_intFilho() {
        // hdr.intFilho.last.ID_Switch     = ; NAO SEI
        hdr.intFilho.last.Porta_Entrada = standard_metadata.ingress_port;
        hdr.intFilho.last.Porta_Saida   = standard_metadata.egress_spec;
        hdr.intFilho.last.Timestamp     = intrinsic_metadata.ingress_global_timestamp;
            // https://github.com/p4lang/behavioral-model/blob/master/docs/simple_switch.md
    }

